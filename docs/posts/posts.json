[
  {
    "path": "posts/2021-03-15-clustering-data-into-dendograms/",
    "title": "Clustering Data into Dendograms",
    "description": "I've worked with several variations of data clsutering, and have seen that heirarchical clustering with dendrograms can communicate multivariate data to wide audience.",
    "author": [
      {
        "name": "Dylan",
        "url": {}
      }
    ],
    "date": "2021-03-15",
    "categories": [],
    "contents": "\nHeirarchical Clustering\nReading in the LTER data\n\n\ncode\n\nlter_raw <- read_csv(\"sbc_lter_registered_stream_chemistry.csv\") %>% \n  mutate(tpc_uM = replace(tpc_uM, \n                        tpc_uM %in% c(\"-999.0\", \"-999\"),\n                        NA)) %>% \n   mutate(tdp_uM = replace(tdp_uM, \n                        tdp_uM %in% c(\"-999.0\", \"-999\"),\n                        NA)) %>% \n   mutate(nh4_uM = replace(nh4_uM, \n                        nh4_uM %in% c(\"-999.0\", \"-999\"),\n                        NA)) %>% \n   mutate(no3_uM = replace(no3_uM, \n                        no3_uM %in% c(\"-999.0\", \"-999\"),\n                        NA)) %>% \n   mutate(po4_uM = replace(po4_uM, \n                        po4_uM %in% c(\"-999.0\", \"-999\"),\n                        NA)) %>% \n   mutate(tdn_uM = replace(tpc_uM, \n                        tdn_uM %in% c(\"-999.0\", \"-999\"),\n                        NA)) %>% \n   mutate(tpn_uM = replace(tpn_uM, \n                        tpn_uM %in% c(\"-999.0\", \"-999\"),\n                        NA)) %>% \n   mutate(tpp_uM = replace(tpc_uM, \n                        tpp_uM %in% c(\"-999.0\", \"-999\"),\n                        NA)) %>% \n   mutate(tss_mgperLiter = replace(tss_mgperLiter, \n                        tss_mgperLiter %in% c(\"-999.0\", \"-999\"),\n                        NA)) %>%\n  mutate(spec_cond_uSpercm = replace(spec_cond_uSpercm, \n                        spec_cond_uSpercm %in% c(\"-999.0\", \"-999\"),\n                        NA)) %>% \n  drop_na() \n\n\n\nNow that we’ve tediously switched -999 into NAs, lets make a summary table by site.\n\n\ncode\n\nlter_summary <- lter_raw %>% \n  group_by(site_code) %>% \n  summarize(nh4_uM = mean(nh4_uM, na.rm = TRUE), \n            no3_uM = mean(no3_uM, na.rm = TRUE), \n           po4_uM = mean(po4_uM, na.rm = TRUE),\n            tdn_uM = mean(tdn_uM, na.rm = TRUE),\n           tdp_uM = mean(tdp_uM, na.rm = TRUE),\n           tpc_uM = mean(tpc_uM, na.rm = TRUE),\n           tpn_uM = mean(tpn_uM, na.rm = TRUE),\n           tpp_uM = mean(tpp_uM, na.rm = TRUE),\n           tss_mgperLiter = mean(tss_mgperLiter, na.rm = TRUE),\n            spec_cond_uSpercm = mean(spec_cond_uSpercm, na.rm = TRUE))\n\nlter_scaled <-lter_summary %>% \n  select(2:11) %>% \n  scale()\n\n## Bringing the site_codes back into the df, after scaling all the numeric data\nrownames(lter_scaled) <- lter_summary$site_code\n\n\n\nNow, let’s find the euclidian distance\n\n\ncode\n\neuc_distance <- dist(lter_scaled, method = \"euclidean\")\n\n# euc_distance\n\n\n\nVisualizing Clusters\nIt’s cool to see those distances, now let’s cluster and plot them!\n\n\ncode\n\nhc_complete <- hclust(euc_distance, method = \"complete\")\n\n hc_complete\n\n\n\nCall:\nhclust(d = euc_distance, method = \"complete\")\n\nCluster method   : complete \nDistance         : euclidean \nNumber of objects: 6 \n\ncode\n\nplot(hc_complete, cex = 0.6, hang = -1) \n\n\n\ncode\n\nggdendrogram(hc_complete) +\n  theme_minimal() +\n  labs(x = \"Water Site Codes\",\n       title = \"Clustering Santa Barbara Water Chemistry Across Multiple Variables\", \n       y = \"Height\")\n\n\n\n\nFigure 1: Different Sites in Santa Barbara are clustered together, based on water chemistry variables in NH4 (uM) and TSS (mg per Liter). In the dendrogram, we see how multivariate chemistry of different sites is relatively similar. The closer two sites are in the dendrogram legs, the more similar their chemistry is across the range of variables. Height shows us how similar clusters are when they merge. Shorter height means more similar clusters.\n\n\n\n",
    "preview": "posts/2021-03-15-clustering-data-into-dendograms/clustering-data-into-dendograms_files/figure-html5/unnamed-chunk-4-1.png",
    "last_modified": "2021-03-15T16:06:02-07:00",
    "input_file": "clustering-data-into-dendograms.utf8.md"
  },
  {
    "path": "posts/2021-03-15-post-3/",
    "title": "Spatial Data Exploration",
    "description": "Here is my first exploration with raster data. I plan to explore the possibilities of Marine Spatial Planning moving forward, so why not start with whales and dolphins?",
    "author": [
      {
        "name": "Dylan",
        "url": {}
      }
    ],
    "date": "2021-03-15",
    "categories": [],
    "contents": "\nWhale (Cetation) Raster Work\nLet’s start by reading in the different .tif files and rasterizing them. We’ll try using raster_stack, since there so many layers.\n\n\ncode\n\nmy_whale_files <- list.files(path = here(\"_posts\", \"2021-03-15-post-3\",   \"ca_cetaceans\"), full.names = TRUE)\n\n\ncetacean_raster <- raster::stack(my_whale_files)\n\n# reclassified_stack <- reclassify(cetacean_raster, c(-Inf, 0.59,  0,  0.59,  Inf,  1))\n\ncetacean_presence <- function(x, thresh = 0.6) {\ny <- ifelse(x >= thresh, 1, NA) \nreturn(y)\n}\n\n## Calculating whale rasters with the function I made\nwhales_in_sea <- calc(cetacean_raster, fun = cetacean_presence)\n\n## Plotting the rasterbrick + function\nplot(whales_in_sea, col = 'lightblue')\n\n\n\ncode\n\n## Converting rasterstack to dataframe, and raster_to_points\n\ncetacean_df <- raster::rasterToPoints(whales_in_sea) %>%\n  as.data.frame()\n\n\n\nMaking a longer df that lists all cetaceans by species, and them summarizing it.\nI use pivot_longer to have a species column with all 35 species, rather than 35 columns (one for each species.)\n\n\ncode\n\ncetacean_longer_df <- cetacean_df %>% \n  pivot_longer(cols =!  x:y,\n               names_to = \"species\",\n               values_to = \"value\") %>% \n  group_by(x,y) %>% \n  summarize(richness = sum(value, na.rm = TRUE))\n\n\n\nBringing in a background layer from the rnaturalearth package.\nThis includes a few different things: - Bringing in world map data (which includes CA) from rnaturalearth - Match the crs between this rnaturalearth and my cetacean_raster stack - Map the earth layer to see it\n\n\ncode\n\nnat_earth_layer <- ne_countries(scale = \"medium\", returnclass = \"sf\")\n\n## Checking the crs() of this layer\nst_crs(nat_earth_layer)\n\n## Making sure that the crs of my origional raster stack and the natural earth layer match up. \nnat_earth_layer <- st_transform(nat_earth_layer, st_crs(cetacean_raster))\n \nst_crs(nat_earth_layer)\n\n\nplot(nat_earth_layer)\n\n\n\n\nPlotting the Rasters\nWe’ll start making a plot of the predicted whale sightings\n\n\ncode\n\nggplot() +\n  geom_raster(data = cetacean_longer_df, aes(x = x, y = y, fill = richness)) +\n  geom_sf(data = nat_earth_layer) +\n  coord_sf(xlim = c(-125, -115), ylim = c(32,38)) +\n  scale_fill_gradient(high = \"red\", low = \"green\") +\n  labs(x = \"Expected Whale Sighting per Unit Area\",\n       y = \"\",\n       fill = \"Species Richness \\n (Cetacean Species per Area)\",\n       title = \"Expected Cetacean Sitings off California's Coast\") +\n  theme_minimal()\n\n\n\n\nFigure 1: Above is a map of expected species richness of 35 cetacean species (whales and dolphins) across California’s coast. We can see high richness (in red) in the Santa Barbara bight.\n\n\n\n",
    "preview": "posts/2021-03-15-post-3/post-3_files/figure-html5/unnamed-chunk-1-1.png",
    "last_modified": "2021-03-15T15:54:00-07:00",
    "input_file": "post-3.utf8.md"
  },
  {
    "path": "posts/2021-03-15-upstream-wrangling/",
    "title": "Upstream Wrangling",
    "description": "I loved this data visualization. The analysis was relatively easy, but introduced me to timeseries data. This sort of post exemplifies the visual style I plan to bring in future work.",
    "author": [
      {
        "name": "Dylan",
        "url": {}
      }
    ],
    "date": "2021-03-15",
    "categories": [],
    "contents": "\nOverview\n -engaging photo\nSummary\nThe Columbia River Basin watershed is home to several species of salmonids, inlcuding Sockeye, Coho, Jack Coho, Steelhead, and Wild Steelhead. Columbia River DART (Data Access in Real Time) provides comprehensive population and environmental data for 10 species in multiple survey locations in the basin over the last 100 years. In this report, we utilize the DART data to visualize population and adult passage trends for Coho, Jack Coho, and Steelhead in the Willamette Falls region.\n-map of fish ladder\n\n\ncode\n\n# Read in data\nfish_raw <- read_csv(here(\"_posts\", \"2021-03-15-upstream-wrangling\", \"data\", \"willamette_fish_passage.csv\"))\n# Make a subset with coho, steelhead, jack coho\n\nfish_sub <- fish_raw %>% \n  clean_names() %>% \n  select(project, date, coho, jack_coho, steelhead) \n\n# Create time series\nfish_ts <- fish_sub %>% \n  mutate(date = mdy(date)) %>% \n  as_tsibble(key = NULL, index = date)\n\n\n\nVisualizations\nTime Series\n\n\ncode\n\n# Tab 1 - time series graph\n\n# Replace na values with 0\nfish_ts_na <- fish_ts %>% \n  replace(is.na(.), 0)\n\n# Create ts graph, but in separate panels\nts_coho <- ggplot(data = fish_ts_na) +\n  geom_line(aes(x = date, y = coho), color = \"red\") +\n  labs(y = \"Coho Count\", x = \"Year\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90))\n\nts_steelhead <- ggplot(data = fish_ts_na) +\n  geom_line(aes(x = date, y = steelhead), color = \"blue\") +\n  labs(y = \"Steelhead Count\", x = \"Year\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90))\n\nts_jack_coho <- ggplot(data = fish_ts_na) +\n  geom_line(aes(x = date, y = jack_coho), color = \"green\") +\n  labs(y = \"Jack Coho Count\", x = \"Year\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 90))\n\nlibrary(patchwork)\n\nts_coho | ts_steelhead | ts_jack_coho \n\n\n\n\nFigure 1. Shows visual counts of Coho (red),Steelhead (blue), and Jack Coho (green) in adult passages in the Willamette Falls Columbia River DART survey location. Observations were taken daily from 2001 to 2010.\nTime Series Takeaways\nThere appears to be seasonality for all three fish species (Coho, Steelhead, and Jack Coho).\nSteelhead and Jack Coho counts remain relatively stable throughout the time period, whereas Coho counts increased and peaked toward the end of the time period.\nData: Columbia River Basin DART Adult Passage Graphics & Text | Columbia Basin Research. http://www.cbr.washington.edu/dart/query/adult_graph_text.\nSeasonplots\nFigure 2. Daily Counts of Coho, Jack Coho, and Steelhead at Willamette Falls\n\n\ncode\n\n# Create Seasonplot showing value (counts) for each day over entire span of data, store as object\nfinal <- annual_fish %>% \n  gg_season(y = value) +  \n  facet_wrap(~species, ncol = 1, scales = \"free\") %>% \n  labs(x = \"Month\", y = \"Counts\")\n\nfinal\n\n\n\n\nFigure 2. shows visual counts of Coho, Jack Coho, and Steelhead in adult passages in the Willamette Falls Columbia River DART survey location. Observations were taken daily from 2001 to 2010.\nSeasonplots Takeaways\nOn average, Coho and Jack Coho use the Willamette Falls fish passages only during the Fall months, while Steelhead seem to use them from the early spring into mid-summer.\nThe Coho population rapidly increases in later years (2009-2010), with peak annual visual counts in 2010 more than triple those in 2008. This upward trend is seen on smaller levels in the Jack Coho and Steelhead populations.\nData: Columbia River Basin DART Adult Passage Graphics & Text | Columbia Basin Research. http://www.cbr.washington.edu/dart/query/adult_graph_text.\nAnnual counts\nFrom Here, I’ll make a plot of annual salmon and steelhead runs by year.\n\n\ncode\n\nannual_fish <- fish_ts %>%\n  mutate(year = year(date)) %>% \npivot_longer(`coho`:`steelhead`,\n               names_to = \"species\",\n               values_to = \"value\") %>% \n  group_by(species) %>% \nindex_by(year) %>% \nsummarize(total = sum(value, na.rm = TRUE))\n\n\n\nNow, let’s plot this!\n\n\ncode\n\nggplot(data = annual_fish, aes(x = year, y = total, color = species)) + \n  geom_line() +\n scale_color_manual(values=c(\"deeppink2\", \"blue2\", \"goldenrod\")) +\n  geom_point(size = 2,\n             alpha = 0.8) +\n  scale_x_continuous(breaks = c(2000, 2002, 2004, 2006, 2008, 2010)) +\n  labs( x = \"Year\",\n        y = \"Annual Fish Observations\",\n        color = \"Species\",\n        title = \"Willamette Falls Annual Salmonoid Counts\") +\n  theme_bw()\n\n\n\n\nFigure 3: Counts for three salmonoid species, totaled annually, from the Willamette Falls observation site.\nCoho and Steelhead both had large jumps in abundance in the late 2000s. This occurred for Coho in 2008, and Steelhead in 2009.\nWhile Steelhead showed the highest abundance in all years but one (2009,) it is also changed more sporadically than the other two fish species.\nIt may be worth looking at older data, to see if Jack Coho abundance was ever on par with the other two fish. It may have declined heavily at some point. Alternatively, all 3 species mau have declines prior to 2000, and only Jack Coho has not rebounded.\nData: Columbia River Basin DART Adult Passage Graphics & Text | Columbia Basin Research. http://www.cbr.washington.edu/dart/query/adult_graph_text.\n\n\n\n",
    "preview": "posts/2021-03-15-upstream-wrangling/distill-preview.png",
    "last_modified": "2021-03-15T16:06:36-07:00",
    "input_file": "upstream-wrangling.utf8.md"
  },
  {
    "path": "posts/2021-03-13-post-2/",
    "title": "Modeling Logistic Growth of Wild Fish Catch",
    "description": "Surprise, another post about fish! Here, I explore nonlinear least squares (NLS) as a method of predicting fish growth paramters.",
    "author": [
      {
        "name": "Dylan",
        "url": {}
      }
    ],
    "date": "2021-03-13",
    "categories": [],
    "contents": "\nReading in Data\n\n\ncode\n\nfish_catch <- read_csv(here(\"_posts\", \"2021-03-13-post-2\", \"fish_catch.csv\"), skip = 2) %>% \n  clean_names() %>% \n  drop_na() %>% \n  mutate(year = as.numeric(year), \n         wild_catch = as.numeric(wild_catch), \n         farmed_fish = as.numeric(farmed_fish), \n         total_fish_production = as.numeric(total_fish_production))\n\n\n\nExploratory Visualization\n\n\ncode\n\nthree_part_plot <- ggplot(data = fish_catch) +\n  geom_line(aes(x = year, y = wild_catch), color = \"goldenrod\") +\n   geom_line(aes(x = year, y = farmed_fish), color = \"darkblue\") +\n   geom_line(aes(x = year, y = total_fish_production), color = \"red\")\n\nthree_part_plot\n\n\n\n\nHere we see: - Wild caught fish looks similar to a logistic equation. - Farmed fish looks exponential, with an X- intercept around 1960 - Total fish looks somewhere between logisitc and linear, but the late arrival of farmed fish gives this line a lot of noise.\nLet’s also check the log of wild catch\n\n\ncode\n\nwild_catch_plot <- ggplot(data = fish_catch)+\n  geom_line(aes(x = year, y = log(wild_catch)), \n             color = \"darkblue\")\n\nwild_catch_plot\n\n\n\n\nLogistic Growth equation\n\\(P(t)=\\frac{K}{1+Ae^{-rt}}\\), where\n\\(K\\) is the carrying capacity\n\\(A\\) is \\(\\frac{K-P_0}{P_0}\\)\n\\(r\\) is the growth rate constant\nHere, our actual variable from the data is time (t.) This we won’t change. The other parameters we will try and estimate!\nTo get an accurate time (t) measurement, let’s set the year 1950 as 0. This mean 1965 with give a t = 20 value.\n\n\ncode\n\nfish_time <- fish_catch %>% \n  mutate(time = year-1950)\n\n\n\nBuilding a model with a year-based df\n\n\ncode\n\ndf_nls <- nls(wild_catch ~ K/( 1 + A*exp(-r*time)),\n              data = fish_time,\n              start = list(K = 180, A = 17, r =0.17),\n              trace = TRUE)\n\n\n376176.7 :  180.00  17.00   0.17\n110768.8 :  135.0807130   7.0419441   0.1334972\n3964.868 :  91.88922105  2.69344828  0.07638427\n1805.267 :  99.71492065  3.76423320  0.06185382\n1372.821 :  98.99301866  4.26099659  0.07106758\n1365.275 :  100.37772693   4.30564831   0.06961349\n1365.145 :  100.25440852   4.31747468   0.06992858\n1365.143 :  100.28205288   4.31612279   0.06988004\n1365.143 :  100.27781732   4.31636117   0.06988787\n1365.143 :  100.27849855   4.31632377   0.06988662\n\ncode\n\n summary(df_nls)\n\n\n\nFormula: wild_catch ~ K/(1 + A * exp(-r * time))\n\nParameters:\n   Estimate Std. Error t value Pr(>|t|)    \nK 1.003e+02  2.734e+00   36.68   <2e-16 ***\nA 4.316e+00  2.929e-01   14.73   <2e-16 ***\nr 6.989e-02  4.648e-03   15.04   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 4.77 on 60 degrees of freedom\n\nNumber of iterations to convergence: 9 \nAchieved convergence tolerance: 5.634e-06\n\ncode\n\np_predict <- predict(df_nls)\n\n\n\nThis model gives us: - \\(K = 1.003 x 10^2\\) - A = 4.316 - r = \\(6.989 x 10^-2\\)\n\n\ncode\n\np_predict <- predict(df_nls)\n\nfish_complete <- data.frame(fish_time, p_predict)\n\n\n\nWe get a final equation of:\n\\(P(t)=\\frac{100.278}{1+4.316e^{-0.06989t}}\\),\nAlright, this is great information on the logistic growth equation.\nFinal Visualization\nI’ll finish with a complete visualization of this curve, alongside our actual observations.\n\n\ncode\n\n final_plot <- ggplot(fish_complete) +\n  geom_line(aes(x = year, y = p_predict)) +\n  geom_point(aes(x = year, y = wild_catch),\n             color = \"cornflowerblue\") +\n  theme_bw() +\n  labs(x = \"Year\", \n       y = \"Wild Fish Catch (Millions of Tons)\", \n       title = \"Wild Fish Catch, Predicted v. Actual (1950-2012)\") +\n  scale_x_continuous(breaks = c(1950, 1960, 1970, 1980, 1990, 2000, 2010))\n  \nfinal_plot\n\n\n\n\nFigure 1: Wild Fish Catch, Predicted v. Actual (1950-2012): The logistic line, shown in black, marks the expected fish catch based on a logistic growth model that uses time (years,) carrying capacity, and intrinsic growth rate. The actual catch data from each year are shown in blue dots. All counts are in millions of tons\n\n\n\n",
    "preview": "posts/2021-03-13-post-2/post-2_files/figure-html5/unnamed-chunk-2-1.png",
    "last_modified": "2021-03-15T16:02:19-07:00",
    "input_file": "post-2.utf8.md"
  },
  {
    "path": "posts/2021-03-13-welcome/",
    "title": "A Coagulating Collection of Code",
    "description": "The idea of a \"blog\" always seemed quite foreign to me. Now that I have code to share with others, a blog seemed like the logical next step.",
    "author": [
      {
        "name": "Dylan",
        "url": {}
      }
    ],
    "date": "2021-03-13",
    "categories": [],
    "contents": "\n\n\n\n",
    "preview": {},
    "last_modified": "2021-03-15T15:29:21-07:00",
    "input_file": {}
  }
]
